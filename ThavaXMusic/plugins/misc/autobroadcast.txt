import asyncio
import datetime
from ThavaXMusic  import app
from pyrogram import Client
from config import START_IMG_URL
from ThavaXMusic .utils.database import get_served_chats
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton


MESSAGE = f"""**♡︎ ᴛʜɪs ɪs ᴛʜᴇ ᴀᴅᴠᴀɴᴄᴇ ᴍᴜsɪᴄ ᴘʟᴀʏᴇʀ + ᴍᴀɴᴀɢᴇᴍɴᴇᴛ ʀᴏʙᴏᴛ ♡︎. 💫

♬ ᴘʟᴀʏ + ᴠᴘʟᴀʏ + ᴄᴘʟᴀʏ ♬

𝒯𝒽𝑒 𝐼𝓃𝓉𝑒𝓃𝓉𝒾𝑜𝓃 𝑜𝒻 𝓉𝒽𝑒 𝑔𝓇𝑜𝓊𝓅 𝒾𝓈 𝓉𝑜 𝒾𝓂𝓅𝓇𝑜𝓋𝑒 𝓉𝒽𝑒 𝓆𝓊𝒶𝓁𝒾𝓉𝓎 𝑜𝒻 𝑀𝑒𝓃𝓉𝒶𝓁 & 𝒫𝒽𝓎𝓈𝒾𝒸𝒶𝓁 𝐻𝑒𝒶𝓁𝓉𝒽 𝑜𝒻 𝑒𝒶𝒸𝒽 𝐼𝓃𝒹𝒾𝓋𝒾𝒹𝓊𝒶𝓁 𝒱𝒾𝒶 𝒲𝒽𝑜𝓁𝒾𝓈𝓉𝒾𝒸 𝒶𝓃𝒹 𝐻𝑜𝓁𝒾𝓈𝓉𝒾𝒸 𝐻𝑒𝒶𝓁𝒾𝓃𝑔 𝑀𝑒𝓉𝒽𝑜𝒹𝓈. 
𝐼𝓉'𝓈 𝒟𝒾𝓋𝒾𝓃𝑒 𝒯𝒽𝑒𝓇𝒶𝓅𝓎 𝓌𝒽𝑒𝓇𝑒 𝓅𝑒𝑜𝓅𝓁𝑒 𝒸𝒶𝓃 𝒽𝑒𝒶𝓁 𝓉𝒽𝑒𝓂𝓈𝑒𝓁𝓋𝑒𝓈**

🔐ᴜꜱᴇ » [/start](https://t.me/{app.username}?start=true) ᴛᴏ ᴄʜᴇᴄᴋ ʙᴏᴛ

➲ ʙᴏᴛ :** @{app.username}"""

BUTTON = InlineKeyboardMarkup(
    [
        [
            InlineKeyboardButton("𓆩♡𓆪 𝒿𝑜𝒾𝓃 𝓃𝑜𝓌 𓆩♡𓆪", url=f"https://t.me/The_Art_Of_Self_Healing")
        ]
    ]
)


BD_VID = "https://telegra.ph/file/943bb99829ec526c3f99a.mp4"

async def send_message_to_chats():
    try:
        chats = await get_served_chats()

        for chat_info in chats:
            chat_id = chat_info.get('chat_id')
            if isinstance(chat_id, int):  # Check if chat_id is an integer
                try:
                    await app.send_video(chat_id, video=BD_VID, caption=MESSAGE, reply_markup=BUTTON)
                    await asyncio.sleep(3)  # Sleep for 1 second between sending messages
                except Exception as e:
                    pass  # Do nothing if an error occurs while sending message
    except Exception as e:
        pass  # Do nothing if an error occurs while fetching served chats
async def continuous_broadcast():
    while True:
        await send_message_to_chats()
        await asyncio.sleep(30000)  # Sleep (180000 seconds) between next broadcast

# Start the continuous broadcast loop
asyncio.create_task(continuous_broadcast())
